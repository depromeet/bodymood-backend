buildscript {
    ext {
        springBootVersion = '2.5.4'
        kotlinVersion = '1.5.31'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

subprojects {
    group = 'com.depromeet.dgdg'

    apply {
        plugin('java-library')
        plugin('eclipse')
        plugin('org.springframework.boot')
        plugin('io.spring.dependency-management')
        plugin('kotlin')
        plugin('kotlin-spring')
        plugin('kotlin-jpa')
        plugin('kotlin-kapt')
    }

    sourceCompatibility = '11'

    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }

    repositories {
        mavenCentral()
    }

    kapt {
        keepJavacAnnotationProcessors = true
    }

    dependencies {
        implementation("org.springframework.boot:spring-boot-starter-validation")
        testImplementation('org.springframework.boot:spring-boot-starter-test')

        // kotlin
        implementation("org.jetbrains.kotlin:kotlin-stdlib")
        implementation("org.jetbrains.kotlin:kotlin-reflect")
        implementation("com.fasterxml.jackson.module:jackson-module-kotlin")

        //lombok
        compileOnly'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    test {
        useJUnitPlatform()
    }
}
